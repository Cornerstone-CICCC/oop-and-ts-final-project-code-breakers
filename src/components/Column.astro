---
import type { Task, statusType } from '../types/task';
import Taskcard from './Taskcard.astro';
import Modal from './Modal.astro';

interface Props {
  status: statusType;
  taskList: Task[];
}

const { status, taskList } = Astro.props;

const newTask: Task = {
  id: 401,
  title: 'New Task',
  description: 'This is a new task.',
  status: status,
};
---

<div class="bg-slate-100 rounded-lg p-4">
  <div class="flex justify-between items-center mb-4">
    <h2 class="text-base font-semibold">{status.value}</h2>
    <div class="flex gap-2">
      <label for={`task-${newTask.id}`} class="cursor-pointer">
        <i class="fa-solid fa-plus"></i>
      </label>
      <input type="checkbox" id={`task-${newTask.id}`} class="modal-toggle" />
      <Modal task={newTask} hideStatus={true} />
    </div>
  </div>
  <div class="flex flex-col gap-4">
    {taskList.map((task) => <Taskcard task={task} />)}
  </div>
</div>

<script>
  document.querySelectorAll('button[data-column]').forEach((button) => {
    button.addEventListener('click', () => {
      const taskTypeKey = button.getAttribute('data-column');
      if (taskTypeKey) {
        const modal = document.querySelector(`#modal-${taskTypeKey}`);
        if (modal instanceof HTMLDialogElement) {
          modal.showModal();
        }
      }
    });
  });
</script>
