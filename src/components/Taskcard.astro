---
// TaskCard.astro
import type { Task } from '../types/task';
import Modal from './Modal.astro';
interface Props {
  task: Task;
  taskId: string;
}

const { task, taskId } = Astro.props;
---

<div id={taskId} class="task-card" data-task-id={taskId}>
  <label draggable="true" for={`task-${task.id}`} class="cursor-pointer">
    <div class="card bg-white shadow-md">
      <div class="card-body p-4">
        <!-- Category Badge -->
        <div class="flex justify-between items-start">
          <!-- Card Title -->
          <h2 class="font-bold text-lg text-gray-800 mb-2">{task.title}</h2>
          <details id="dropdown" class="dropdown">
            <summary class="btn border-none bg-transparent shadow-none" }>
              <i class="fa-solid fa-ellipsis text-black"></i>
            </summary>
            <ul
              class="menu dropdown-content bg-white text-black rounded-box z-1 w-28 p-2 shadow-sm"
            >
              <li>
                <button onclick='console.log("Edit button clicked")'>
                  <i class="fa-solid fa-pen"></i>
                  Edit
                </button>
              </li>
              <li>
                <button onclick='console.log("Delete Button clicked")'>
                  <i class="fa-solid fa-trash"></i>
                  Delete
                </button>
              </li>
            </ul>
          </details>
        </div>

        <!-- Card Description -->
        <p class="text-gray-600 text-sm mb-3">{task.description}</p>
      </div>
    </div>
  </label>
  <input type="checkbox" id={`task-${task.id}`} class="modal-toggle" />
  <Modal task={task} />
</div>

<script is:inline>
  document.addEventListener('click', function (e) {
    const dropdown = document.getElementById('dropdown');
    if (dropdown && !dropdown.contains(e.target)) {
      dropdown.removeAttribute('open');
    }
  });
</script>
