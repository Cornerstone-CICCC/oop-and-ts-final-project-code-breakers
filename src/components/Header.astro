<header>
  <div class="flex flex-col md:flex-row justify-between items-center p-4 gap-4">
    <h1 class="text-2xl font-bold">Kanbanaza</h1>

    <div class="search-area">
      <label class="input input-bordered flex items-center gap-2 w-[350px]">
        <input type="text" class="grow" placeholder="Search" id="searchInput" />
        <svg
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 16 16"
          fill="currentColor"
          class="h-4 w-4 opacity-70"
        >
          <path
            fill-rule="evenodd"
            d="M9.965 11.026a5 5 0 1 1 1.06-1.06l2.755 2.754a.75.75 0 1 1-1.06 1.06l-2.755-2.754ZM10.5 7a3.5 3.5 0 1 1-7 0 3.5 3.5 0 0 1 7 0Z"
            clip-rule="evenodd"></path>
        </svg>
      </label>

      <ul
        id="taskSuggestions"
        class="mt-2 w-auto bg-white shadow-md rounded-md absolute z-10"
        style="display: none;"
      >
      </ul>
    </div>
  </div>
</header>

<script>
  import { taskListInstance } from '../lib/TaskList';
  document.addEventListener('DOMContentLoaded', () => {
    const searchInput = document.getElementById('searchInput') as HTMLInputElement;
    const taskSuggestions = document.getElementById('taskSuggestions') as HTMLUListElement;

    function updateTaskList(query: string) {
      const filteredTasks = taskListInstance.getTasksByKeyword(query);
      taskSuggestions.style.display = filteredTasks.length > 0 ? 'block' : 'none';

      taskSuggestions.innerHTML = filteredTasks
        .map(
          (task: any, index: number) => `
            <li class="task-item p-2 hover:bg-gray-200 cursor-pointer" data-index="${index}">
              <h2>${task.title}</h2>
              <p>${task.description}</p>
            </li>
          `,
        )
        .join('');

      document.querySelectorAll('.task-item').forEach((item) => {
        item.addEventListener('click', (event: Event) => {
          const target = event.currentTarget as HTMLElement;
          const index = parseInt(target.getAttribute('data-index') || '0');
          const selectedTask = filteredTasks[index];

          // document.getElementById('modalTitle')!.textContent = selectedTask.title;
          // document.getElementById('modalDescription')!.textContent = selectedTask.description;
          // document.getElementById('taskModal')!.classList.remove('hidden');
        });
      });
    }

    function handleSearch() {
      const query = searchInput.value.trim();
      updateTaskList(query);
    }

    searchInput.addEventListener('input', handleSearch);
  });
</script>
